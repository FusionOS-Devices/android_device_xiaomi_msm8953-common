allow init proc_boot_reason:file r_file_perms;
allow init adsprpcd_file:lnk_file { read };
allow init block_device:blk_file { write };
allow init default_android_hwservice:hwservice_manager { add  find };
allow init default_android_vndservice:service_manager { add  find };
allow init device:chr_file { ioctl  open  read  write };
allow init firmware_file:filesystem { getattr  mount  relabelfrom  relabelto };
allow init fwmarkd_socket:sock_file { write };
allow init graphics_device:chr_file { ioctl  open  read  write };
allow init hal_bluetooth_hwservice:hwservice_manager { add  find };
allow init hal_camera_default:fd { use };
allow init hal_drm_hwservice:hwservice_manager { add  find };
allow init hal_fingerprint_hwservice:hwservice_manager { add  find };
allow init hal_gatekeeper_hwservice:hwservice_manager { add  find };
allow init hal_gnss_hwservice:hwservice_manager { add  find };
allow init hal_graphics_composer_default:binder { call };
allow init hal_health_default:binder { call  transfer };
allow init hal_health_hwservice:hwservice_manager { find };
allow init hal_ir_hwservice:hwservice_manager { add  find };
allow init hal_keymaster_hwservice:hwservice_manager { add  find };
allow init hal_light_service:service_manager { add };
allow init hal_power_service:service_manager { add };
allow init hal_telephony_hwservice:hwservice_manager { add  find };
allow init hal_tetheroffload_hwservice:hwservice_manager { add  find };
allow init hal_usb_hwservice:hwservice_manager { add  find };
allow init hidl_base_hwservice:hwservice_manager { add };
allow init hwservicemanager:binder { call  transfer };
allow init init:binder { call  transfer };
allow init init:capability { net_bind_service };
allow init init:capability2 { block_suspend  wake_alarm };
allow init init:netlink_generic_socket { bind  create  getattr  read  setopt  write };
allow init init:netlink_kobject_uevent_socket { bind  create  getopt  read  setopt };
allow init init:netlink_route_socket { bind  create  getattr  getopt  nlmsg_read  nlmsg_write  read  setopt  write };
allow init init:netlink_socket { bind  create  read  setopt  write };
allow init init:netlink_xfrm_socket { bind  create };
allow init init:rawip_socket { create  getopt  setopt };
allow init init:socket { bind  connect  create  ioctl  read  setopt  write };
allow init init:tcp_socket { bind  create  getattr  ioctl  setopt };
allow init init:udp_socket { bind  getattr  getopt  ioctl  read  setopt  write };
allow init ion_device:chr_file { ioctl  open  read };
allow init mnt_vendor_file:dir { mounton };
allow init netd:binder { call };
allow init netd:unix_stream_socket { connectto };
allow init netutils_wrapper_exec:file { execute  execute_no_trans  getattr  open  read };
allow init node:tcp_socket { node_bind };
allow init node:udp_socket { node_bind };
allow init persist_file:lnk_file { read };
allow init port:tcp_socket { name_bind };
allow init port:udp_socket { name_bind };
allow init proc:file { setattr  write };
allow init proc_interrupts:file { getattr  open  read };
allow init radio:binder { call };
allow init rtc_device:chr_file { ioctl  open  read };
allow init same_process_hal_file:file { execute };
allow init servicemanager:binder { call  transfer };
allow init socket_device:sock_file { create  setattr  unlink  write };
allow init sysfs:file { open  read  setattr  write };
allow init sysfs_devices_system_cpu:file { write };
allow init sysfs_net:file { open  read };
allow init sysfs_wake_lock:file { append  open  write };
allow init system_file:file { execute_no_trans };
allow init system_net_netd_hwservice:hwservice_manager { find };
allow init system_server:binder { call  transfer };
allow init system_suspend_hwservice:hwservice_manager { find };
allow init uhid_device:chr_file { ioctl  open  write };
allow init uio_device:chr_file { open  read };
allow init vendor_data_file:file { ioctl  lock };
allow init vendor_file:file { execute  execute_no_trans };
allow init vendor_toolbox_exec:file { execute_no_trans };
allow init video_device:chr_file { ioctl  open  read };
allow init vndbinder_device:chr_file { ioctl  open  read  write };
allow init vndservicemanager:binder { call  transfer };

